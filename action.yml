name: 'Checkout Build Tag Push Docker'
description: 'Builds, Tags and pushes Docker images to custom repository.'
inputs:
  image-name:
    description: 'Name of the Docker image, src-folder and tag'
    required: true
  version:
    description: 'Version tag for the Docker image (default: latest)'
    required: false
    default: 'latest'
  suffix:
    description: 'Optional suffix to add to the image name'
    required: false
    default: ''

branding:
  icon: 'package'
  color: 'blue'
    
runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set image tag
      id: set-tag
      run: |
        IMAGE_TAG="${{ inputs.image-name }}"
        if [ -n "${{ inputs.suffix }}" ]; then
          IMAGE_TAG="${IMAGE_TAG}-${{ inputs.suffix }}"
        fi
        echo "::set-output name=image-tag::${IMAGE_TAG}"
      shell: bash

    - name: Build Docker image
      run: docker build -t ${{ steps.set-tag.outputs.image-tag }}:${{ inputs.version }} -f ${{ inputs.image-name }}/Dockerfile ./${{ inputs.image-name }}
      shell: bash

    - name: Log in to Docker registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ env.DOCKER_REGISTRY_USERNAME }}
        password: ${{ env.DOCKER_REGISTRY_PASSWORD }}

    - name: Push Docker image to registry
      run: |
        docker tag ${{ steps.set-tag.outputs.image-tag }}:${{ inputs.version }} ${{ env.DOCKER_REGISTRY }}/${{ steps.set-tag.outputs.image-tag }}:${{ inputs.version }}
        docker push ${{ env.DOCKER_REGISTRY }}/${{ steps.set-tag.outputs.image-tag }}:${{ inputs.version }}
      shell: bash
